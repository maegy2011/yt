// This is your Prisma schema file for YT Islami project
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  role         Role     @default(VIEWER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  addedChannels   WhitelistedChannel[]
  addedVideos     WhitelistedVideo[]
  auditLogs       AuditLog[]

  @@map("users")
}

model WhitelistedChannel {
  id           String   @id @default(cuid())
  channelId    String   @unique
  channelTitle String?
  addedBy      String
  addedAt      DateTime @default(now())

  // Relations
  addedByUser  User               @relation(fields: [addedBy], references: [id])
  videos       WhitelistedVideo[]

  @@map("whitelisted_channels")
}

model WhitelistedVideo {
  id           String   @id @default(cuid())
  videoId      String   @unique
  title        String?
  description  String?
  thumbnails   Json?
  duration     String?
  channelId    String?
  addedBy      String
  addedAt      DateTime @default(now())
  isActive     Boolean  @default(true)
  manualTags   Json?    // Store tags as JSON array
  lastFetched  DateTime?

  // Relations
  addedByUser  User                @relation(fields: [addedBy], references: [id])
  channel      WhitelistedChannel? @relation(fields: [channelId], references: [channelId])

  @@map("whitelisted_videos")
}

model ApiQuotaLog {
  id             BigInt   @id @default(autoincrement())
  date           DateTime @default(now())
  usedUnits      Int
  remainingUnits Int
  recordedAt     DateTime @default(now())

  @@map("apiquotalogs")
}

model AuditLog {
  id         String   @id @default(cuid())
  userId     String?
  action     String
  targetType String
  targetId   String
  details    Json?
  createdAt  DateTime @default(now())

  // Relations
  user User? @relation(fields: [userId], references: [id])

  @@map("audit_logs")
}

model Setting {
  key   String @id
  value Json?

  @@map("settings")
}

enum Role {
  ADMIN
  VIEWER
}