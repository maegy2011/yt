// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Enable connection pooling for serverless
  directUrl = env("DIRECT_URL")
}

// User model for authentication and preferences
model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String?
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Privacy and preferences
  privacyMode   String   @default("standard") // standard, enhanced, strict
  theme         String   @default("system")  // light, dark, system
  language      String   @default("en")
  
  // Relations
  searchHistory SearchHistory[]
  preferences   UserPreferences?
  
  @@map("users")
}

// User preferences
model UserPreferences {
  id           String @id @default(cuid())
  userId       String @unique
  autoPlay     Boolean @default(true)
  annotations  Boolean @default(false)
  captions     Boolean @default(true)
  quality      String  @default("auto") // auto, 1080p, 720p, 480p, 360p
  volume       Int     @default(100)
  
  // Privacy settings
  disableTracking   Boolean @default(true)
  blockAds         Boolean @default(true)
  hideWatchHistory Boolean @default(false)
  
  @@map("user_preferences")
}

// Search history for users
model SearchHistory {
  id          String   @id @default(cuid())
  userId      String
  query       String
  timestamp   DateTime @default(now())
  
  @@map("search_history")
}

// Video cache for performance
model VideoCache {
  id          String   @id @default(cuid())
  videoId     String   @unique
  title       String
  description String?
  thumbnail   String?
  duration    String?
  viewCount   Int?
  publishedAt DateTime?
  cachedAt    DateTime @default(now())
  expiresAt   DateTime
  
  @@map("video_cache")
}

// Analytics data (optional)
model Analytics {
  id        String   @id @default(cuid())
  event     String   // search, play, pause, etc.
  data      Json?    // Additional event data
  timestamp DateTime @default(now())
  userAgent String?
  ip        String?
  
  @@map("analytics")
}